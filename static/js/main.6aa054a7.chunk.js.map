{"version":3,"sources":["Component/Card.jsx","Component/Form.jsx","Pages/ToDoPage.jsx","Pages/Show.js","App.js","reportWebVitals.js","index.js"],"names":["Card","listOfTodos","map","todo","to","id","content","Form","userInput","onFormChange","onFormSubmit","onSubmit","event","preventDefault","type","value","onChange","target","required","ToDoPage","useState","setTodo","addToDo","setAddToDo","useEffect","fetch","then","response","ok","json","data","getLatestToDos","inputValue","console","log","method","body","JSON","stringify","headers","message","Show","useParams","length","App","className","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAIaA,EAAO,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAClB,OACI,mCACKA,EAAYC,KAAI,SAAAC,GACb,OACI,6BACI,6BAAI,cAAC,IAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAlB,SAAyBF,EAAKG,aAD7BH,EAAKE,UCanBE,EApBK,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAU3C,OACI,mCACI,uBAAMC,SANO,SAACC,GAClBA,EAAMC,iBACNH,KAII,UACI,uBAAOI,KAAK,OAAOC,MAAOP,EAAWQ,SAX5B,SAACJ,GAClBH,EAAaG,EAAMK,OAAOF,QAU2CG,UAAQ,IACrE,uBAAOJ,KAAK,iBCXfK,EAAW,WAAO,IAAD,EACFC,mBAAS,IADP,mBACnBjB,EADmB,KACbkB,EADa,OAEID,mBAAS,IAFb,mBAEnBE,EAFmB,KAEVC,EAFU,KAI1BC,qBAAU,WACNC,MAAM,QACLC,MAAK,SAACC,GACH,GAAGA,EAASC,GACR,OAAOD,EAASE,UAGvBH,MAAK,SAAAI,GAAI,OAAIT,EAAQS,QACxB,IAEF,IAsBMC,EAAiB,WACnBN,MAAM,QAAQC,MAAK,SAAAC,GACf,GAAGA,EAASC,GACR,OAAOD,EAASE,UAErBH,MAAK,SAAAI,GAAI,OAAIT,EAAQS,OAE5B,OACI,qCACI,cAAC,EAAD,CAAMtB,UAAWc,EAASb,aA/BT,SAACuB,GACtBT,EAAWS,GACXC,QAAQC,IAAIZ,IA6BkDZ,aA1BzC,WACrBe,MAAM,cAAe,CACjBU,OAAS,OACTC,KAAOC,KAAKC,UAAU,CAClBhC,QAAQgB,IAEZiB,QAAS,CACL,eAAgB,uCAErBb,MAAK,SAAAC,GAAQ,OAAIA,EAASE,UAC5BH,MAAK,SAAAc,GACFP,QAAQC,IAAIM,GACZjB,EAAW,IACXQ,UAcA,cAAC,EAAD,CAAM9B,YAAeE,Q,OChDpBsC,EAAO,WAAO,IACfpC,EAAOqC,cAAPrC,GADc,EAEEe,mBAAS,IAFX,mBAEfjB,EAFe,KAETkB,EAFS,KAUtB,OANAG,qBAAU,WACNC,MAAM,QAAD,OAASpB,IACbqB,MAAK,SAAAC,GAAQ,OAAIA,EAASE,UAC1BH,MAAK,SAAAI,GAAI,OAAIT,EAAQS,QACxB,CAACzB,IAGC,8BACKF,EAAKwC,OAAS,GAAKxC,EAAKD,KAAI,SAAA4B,GAAI,OAAI,8BAAMA,EAAKxB,gBCS7CsC,MAnBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACI,cAAC,EAAD,cCHCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6aa054a7.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nexport const Card = ({listOfTodos}) => {\n    return (\n        <>\n            {listOfTodos.map(todo => {\n                return (\n                    <ul key={todo.id}>\n                        <li><Link to={`${todo.id}`}>{todo.content}</Link></li>\n                    </ul>\n                )\n            })}\n        </>\n    )\n}\n\n\n","import React from 'react'\n\nexport const Form = ({userInput, onFormChange, onFormSubmit}) => {\n\n    const handleChange = (event) => {\n        onFormChange(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        onFormSubmit()\n    }\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={userInput} onChange={handleChange} required/>\n                <input type=\"submit\"/>\n            </form>\n        </>\n    )\n}\n\nexport default Form\n","import React, {useEffect, useState} from 'react';\nimport {Card} from \"../Component/Card\";\nimport Form from \"../Component/Form\";\n\n\nexport const ToDoPage = () => {\n    const [todo, setTodo] = useState([])\n    const [addToDo, setAddToDo] = useState(\"\")\n\n    useEffect(() => {\n        fetch('/api')\n        .then((response) => {\n            if(response.ok) {\n                return response.json()\n            }\n        })\n        .then(data => setTodo(data))\n    },[])\n\n    const handleFormChange = (inputValue) => {\n        setAddToDo(inputValue)\n        console.log(addToDo)\n    }\n\n    const handleFormSubmit = () => {\n        fetch(\"/api/create\", {\n            method : \"POST\",\n            body : JSON.stringify({\n                content:addToDo \n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset = UTF-8\"\n            }\n        }).then(response => response.json())\n        .then(message => {\n            console.log(message)\n            setAddToDo(\"\")\n            getLatestToDos()\n        })\n    }\n\n    const getLatestToDos = () => {\n        fetch('/api').then(response => {\n            if(response.ok) {\n                return response.json()\n            }\n        }).then(data => setTodo(data))\n    }\n    return (\n        <>\n            <Form userInput={addToDo} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit} />\n            <Card listOfTodos = {todo} />\n        </>\n    )\n}\n\n","import React, {useState,useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\n\nexport const Show = () => {\n    const { id } = useParams()\n    const [todo, setTodo] = useState([])\n\n    useEffect(() => {\n        fetch(`/api/${id}`)\n        .then(response => response.json())\n        .then(data => setTodo(data))\n    },[id])\n\n    return (\n        <div>\n            {todo.length > 0 && todo.map(data => <div>{data.content}</div>)}        \n        </div>\n    )\n}\n\nexport default Show\n","import './App.css';\nimport {ToDoPage} from \"./Pages/ToDoPage\";\nimport {BrowserRouter as Router, Route, Switch, Link} from \"react-router-dom\";\nimport {Show} from \"./Pages/Show\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n          <Route exact path='/'>\n              <ToDoPage />\n          </Route>\n\n          <Route path='/:id'>\n              <Show />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}